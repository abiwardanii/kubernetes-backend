---
apiVersion: v1
kind: Namespace
metadata:
  name: staging

---
apiVersion: v1
data:
  DB_HOST: "54.205.127.148"
  DB_USER: "arifh19"
  DB_PASSWORD: "1sampai9"
  DB_NAME: "restaurant"
  DB_PORT: "29999"
  REDIS_HOST: "54.205.127.148"
  REDIS_PORT: "27777"
  REDIS_PASSWORD: "1sampai9"
  JWT_KEYS: "AUx857wf^p!fp>+Nx5KK-.xucu7p"

kind: ConfigMap
metadata:
  name: env-restaurant
  namespace: staging

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restaurant-backend-app
  namespace: staging
  labels:
    tier: restaurant-backend
spec:
  selector:
    matchLabels:
      app: restaurant-backend
  replicas: 3
  template:
    metadata:
      labels:
        app: restaurant-backend
    spec:
      containers:
        - name: restaurant-backend
          image: arifh19/restaurant-backend:staging
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /backend/public/upload
              name: backend-volume
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: env-restaurant
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: backend-volume
          hostPath:
            path: /home/ubuntu/restaurant/staging/data
            type: DirectoryOrCreate

---
apiVersion: v1
kind: Service
metadata:
  name: restaurant-service-backend
  namespace: staging
spec:
  selector:
    app: restaurant-backend
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: restaurant-ingress
  namespace: staging
  labels:
    app: restaurant-ingress
spec:
  rules:
    - host: arifhdev.me
      http:
        paths:
          - backend:
              serviceName: restaurant-service-frontend
              servicePort: 80
    - host: www.arifhdev.me
      http:
        paths:
          - backend:
              serviceName: restaurant-service-frontend
              servicePort: 80
    - host: api.arifhdev.me
      http:
        paths:
          - backend:
              serviceName: restaurant-service-backend
              servicePort: 80
